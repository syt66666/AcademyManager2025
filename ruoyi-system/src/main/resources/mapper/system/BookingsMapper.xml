<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.BookingsMapper">

    <resultMap type="Bookings" id="SysBookingResult">
        <id     property="bookingId"      column="booking_id"      />
        <result property="studentId"      column="student_id"      />
        <result property="activityId"     column="activity_id"     />
        <result property="bookAt"         column="booked_at"       />
        <result property="proof"          column="proof"           />
        <result property="summary"        column="summary"         />
        <result property="status"         column="status"          />
        <result property="reviewer"       column="reviewer"        />
        <result property="reviewComment"  column="review_comment"  />
        <result property="reviewTime"     column="review_time"     />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />
    </resultMap>

    <sql id="selectBookingsVo">
        select booking_id, student_id, activity_id, booked_at, proof, summary, status, reviewer,
        review_comment, review_time, create_by, create_time, update_by, update_time, remark
        from bookings
    </sql>

    <select id="selectBookingsList" parameterType="Bookings" resultMap="SysBookingResult">
        <include refid="selectBookingsVo"/>
        <where>
            <if test="studentId != null">
                and student_id = #{studentId}
            </if>
            <if test="activityId != null">
                and activity_id = #{activityId}
            </if>
            <if test="bookAt != null">
                and booked_at = #{bookAt}
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
            <if test="reviewer != null and reviewer != ''">
                and reviewer like concat('%', #{reviewer}, '%')
            </if>
        </where>
        order by booked_at desc
    </select>

    <select id="selectBookingsById" parameterType="Long" resultMap="SysBookingResult">
        <include refid="selectBookingsVo"/>
        where booking_id = #{bookingId}
    </select>

    <insert id="insertBookings" parameterType="Bookings" useGeneratedKeys="true" keyProperty="bookingId">
        insert into bookings
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="activityId != null">activity_id,</if>
            <if test="bookAt != null">booked_at,</if>
            <if test="proof != null">proof,</if>
            <if test="summary != null">summary,</if>
            <if test="status != null">status,</if>
            <if test="reviewer != null">reviewer,</if>
            <if test="reviewComment != null">review_comment,</if>
            <if test="reviewTime != null">review_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="activityId != null">#{activityId},</if>
            <if test="bookAt != null">#{bookAt},</if>
            <if test="proof != null">#{proof},</if>
            <if test="summary != null">#{summary},</if>
            <if test="status != null">#{status},</if>
            <if test="reviewer != null">#{reviewer},</if>
            <if test="reviewComment != null">#{reviewComment},</if>
            <if test="reviewTime != null">#{reviewTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateBookings" parameterType="Bookings">
        update bookings
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="activityId != null">activity_id = #{activityId},</if>
            <if test="bookAt != null">booked_at = #{bookAt},</if>
            <if test="proof != null">proof = #{proof},</if>
            <if test="summary != null">summary = #{summary},</if>
            <if test="status != null">status = #{status},</if>
            <if test="reviewer != null">reviewer = #{reviewer},</if>
            <if test="reviewComment != null">review_comment = #{reviewComment},</if>
            <if test="reviewTime != null">review_time = #{reviewTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where booking_id = #{bookingId}
    </update>

    <delete id="deleteBookingsById" parameterType="Long">
        delete from bookings where booking_id = #{bookingId}
    </delete>

    <delete id="deleteBookingsByIds" parameterType="String">
        delete from bookings where booking_id in
        <foreach item="bookingId" collection="array" open="(" separator="," close=")">
            #{bookingId}
        </foreach>
    </delete>

</mapper>